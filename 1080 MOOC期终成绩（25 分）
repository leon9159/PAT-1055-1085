#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
struct item{
char id[21];
int pro;
int mid;
int fin;
int sum;
}stu[10001];
int cmp(const void *a,const void *b)
{
  struct item *c = (item *)a;
	struct item *d = (item *)b;
	if(c->sum!=d->sum) return(d->sum-c->sum);
	else return(strcmp(c->id,d->id));
}
int main()
{
    int p,m,n;
    scanf("%d %d %d",&p,&m,&n);
    char tid[21];
    int i,j,t,num,k=0;
    for(i=0;i<p;i++)
    {
        scanf("%s %d",tid,&num);
        if(num>=200)
        {
            strcpy(stu[k].id,tid);
			stu[k].pro=num;
			stu[k].mid=-1;
			stu[k].fin=0;
			stu[k].sum=0;
            k++;
        }
    }
    for(i=0;i<m;i++)
	{
		scanf("%s %d",tid,&num);
		for(j=0;j<k;j++)
			if(strcmp(stu[j].id,tid)==0)
			{
				stu[j].mid=num;
			}
	}
	for(i=0;i<n;i++)
	{
		scanf("%s %d",tid,&num);
		for(j=0;j<k;j++)
			if(strcmp(stu[j].id,tid)==0)
			{
				stu[j].fin=num;
			}
	}
	//printf("%d",stu[2].fin);
	for(i=0;i<k;i++)
	{
		if(stu[i].mid<=stu[i].fin)
			stu[i].sum=stu[i].fin;
		else
		{
			stu[i].sum=(int)(stu[i].mid*0.4+stu[i].fin*0.6+0.5);
		}
	}
	//printf("%s %d\n",stu[k-1].id,stu[k-1].sum);
	qsort(stu,k,sizeof(stu[0]),cmp);
	i=0;
	while(stu[i].sum>=60)
	{
		printf("%s %d %d %d %d\n",stu[i].id,stu[i].pro,stu[i].mid,stu[i].fin,stu[i].sum);
		i++;
	}
	return 0;
}
